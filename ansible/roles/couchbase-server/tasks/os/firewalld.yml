---
- name: Make sure firewalld is installed
  yum:
    name: firewalld
    state: present
  when: couchbase_os.firewalld | default(false) and (ansible_distribution | lower in ['amazon', 'redhat', 'el'])
  tags:
    - couchbase_firewall

- name: Make sure firewalld is installed
  apt:
    name: firewalld
    state: present
  when: couchbase_os.firewalld | default(false) and (ansible_distribution | lower == 'ubuntu')
  tags:
    - couchbase_firewall

- name: Set the default python interpreter to use
  set_fact:
    use_python_interpreter: '/usr/bin/python'

- name: Set the python interpreter to use on Ubuntu
  set_fact:
    use_python_interpreter: '/usr/bin/python3'
  when: couchbase_os.firewalld | default(false) and ansible_distribution | lower == 'ubuntu'

- name: Make sure firewalld is started
  service:
    name: firewalld
    state: started
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 4369: epmd - Erlang Port Mapper Daemon (Node-to-Node)
- name: Add port 4369
  ansible.posix.firewalld:
    port: 4369/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 8091: rest_port - Cluster administration REST/HTTP traffic, including Couchbase Web Console (Node-to-Node, Client-to-node, XDCR)
# 8092: capi_port - Views and XDCR access (Node-to-Node, Client-to-node, XDCR)
# 8093: query_port - Query service REST/HTTP traffic (Node-to-Node, Client-to-node)
# 8094: fts_http_port - Search Service REST/HTTP traffic (Client-to-node)
# 8095: cbas_http_port - Analytics service REST/HTTP traffic (Client-to-node)
# 8096: eventing_http_port - Eventing service REST/HTTP traffic (Client-to-node)
- name: Add ports 8091-8096
  ansible.posix.firewalld:
    port: 8091-8096/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 18091: ssl_rest_port - Cluster administration REST/HTTP traffic, including Couchbase Web Console (Node-to-Node, Client-to-node, XDCR)
# 18092: ssl_capi_port - Views and XDCR access (Node-to-Node, Client-to-node, XDCR)
# 18093: ssl_query_port - Query service REST/HTTP traffic (Node-to-Node, Client-to-node)
# 18094: fts_ssl_port - Search Service REST/HTTP traffic (Client-to-node)
# 18095: cbas_ssl_port - Analytics service REST/HTTP traffic (Client-to-node)
# 18096: eventing_ssl_port - Eventing service REST/HTTP traffic (Client-to-node)
- name: Add ports 18091-18096
  ansible.posix.firewalld:
    port: 18091-18096/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 9100: indexer_admin_port - Indexer service (Node-to-Node)
# 9101: indexer_scan_port - Indexer service (Node-to-Node)
# 9102: indexer_http_port - Indexer service (Node-to-Node)
# 9103: indexer_stinit_port - Indexer service (Node-to-Node)
# 9104: indexer_stcatchup_port - Indexer service (Node-to-Node)
# 9105: indexer_stmaint_port - Indexer service (Node-to-Node)
- name: Add ports 9100-9105
  ansible.posix.firewalld:
    port: 9100-9105/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 9110: cbas_admin_port - Analytics service (Node-to-Node)
# 9111: cbas_cc_http_port - Analytics service (Node-to-Node)
# 9112: cbas_cc_cluster_port - Analytics service (Node-to-Node)
# 9113: cbas_cc_client_port - Analytics service (Node-to-Node)
# 9114: cbas_console_port - Analytics service (Node-to-Node)
# 9115: cbas_cluster_port - Analytics service (Node-to-Node)
# 9116: cbas_data_port - Analytics service (Node-to-Node)
# 9117: cbas_result_port - Analytics service (Node-to-Node)
# 9118: cbas_messaging_port - Analytics service (Node-to-Node)
# 9119: cbas_auth_port - Analytics service (node-local only)
# 9120: cbas_replication_port - Analytics service (Node-to-Node)
# 9121: cbas_metadata_port - Analytics service (Node-to-Node)
# 9122: cbas_metadata_callback_port - Analytics service (Node-to-Node)
- name: Add ports 9110-9122
  ansible.posix.firewalld:
    port: 9110-9122/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 9130: fts_grpc_port - Search Service gRPC port used for scatter-gather operations between FTS nodes (Node-to-Node)
- name: Add port 9130
  ansible.posix.firewalld:
    port: 9130/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 19130: fts_grpc_ssl_port - Search Service gRPC port used for scatter-gather operations between FTS nodes (Node-to-Node)
- name: Add port 19130
  ansible.posix.firewalld:
    port: 19130/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 9140: eventing_debug_port - Eventing Service Debugger (Client-to-Node)
- name: Add port 9140
  ansible.posix.firewalld:
    port: 9140/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 9998: xdcr_rest_port - XDCR REST port (node-local only)
# 9999: projector_port - Indexer service (Node-to-Node)
- name: Add ports 9998-9999
  ansible.posix.firewalld:
    port: 9998-9999/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 11209: memcached_dedicated_port - Data Service (Node-to-Node, Client-to-Node)
# 11210: memcached_port - Data Service  (Node-to-Node, Client-to-Node, XDCR)
- name: Add ports 11209-11210
  ansible.posix.firewalld:
    port: 11209-11210/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 11207: memcached_ssl_port - Data Service  (Node-to-Node, Client-to-Node, XDCR)
- name: Add port 11207
  ansible.posix.firewalld:
    port: 11207/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 21100: Cluster Management Exchange - Cluster management traffic and communication  (Node-to-Node)
- name: Add port 21100
  ansible.posix.firewalld:
    port: 21100/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 21150: Cluster Management Exchange - Cluster management traffic and communication  (Node-to-Node)
- name: Add port 21150
  ansible.posix.firewalld:
    port: 21150/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 21200: Cluster Management Exchange - Cluster management traffic and communication (node-local only)
- name: Add port 21200
  ansible.posix.firewalld:
    port: 21200/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 21250: Cluster Management Exchange - Cluster management traffic and communication (node-local only)
- name: Add port 21250
  ansible.posix.firewalld:
    port: 21250/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 21300: Cluster Management Exchange - Cluster management traffic and communication (node-local only)
- name: Add port 21300
  ansible.posix.firewalld:
    port: 21300/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

# 21350: Cluster Management Exchange - Cluster management traffic and communication (node-local only)
- name: Add port 21350
  ansible.posix.firewalld:
    port: 21350/tcp
    permanent: true
    state: enabled
  vars:
    ansible_python_interpreter: '{{ use_python_interpreter }}'
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall

- name: Make sure firewalld is restarted
  service:
    name: firewalld
    state: restarted
  when: couchbase_os.firewalld | default(false)
  tags:
    - couchbase_firewall
